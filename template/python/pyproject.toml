[project]
name = "MKPROJECT_PROJECT_NAME"
version = "0"
requires-python = ">= MKPROJECT_PYTHON_VERSION"
dependencies = [
]

[project.optional-dependencies]
dev = [
  "fabric",
  "mypy",
  "pip-tools",
  "pytest",
  "ruff",
]

[tool.mypy]
exclude = [
  "conftest.py",
]
strict = true

[tool.pip-tools]
allow-unsafe = true
generate-hashes = true
reuse-hashes = true
strip-extras = true

[tool.ruff]
line-length = 140

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "ANN401", # any-type
  "D", # pydocstyle
  "ERA001", # commented-out-code
  "FBT001", # boolean-type-hint-positional-argument
  "FBT002", # boolean-default-value-positional-argument
  "FIX002", # line-contains-todo
  "PGH003", # blanket-type-ignore
  "PGH004", # blanket-noqa
  "RUF022", # ignore becasue IntelliJ doesn't auto sort the way it wants
  "T201", # print
  "TD", # flake8-todos
]

[tool.ruff.lint.per-file-ignores]
"{conftest.py,fabfile.py,*_test.py}" = [
  "ANN", # flake8-annotations
  "FBT003", # boolean-positional-value-in-call
  "N801", # invalid-class-name
  "PLR0913", # too-many-arguments
  "PLR2004", # magic-value-comparison
  "PT011", # pytest-raises-too-broad
  "S101", # assert
]

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true

[tool.ruff.lint.isort]
# Matches IntelliJ ordering
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[build-system]
requires = ["setuptools >= 70.0"]  # Chosen as the newest version that had a change for "editable" installs
build-backend = "setuptools.build_meta"
